@using Sample.Core.Services
@using Sample.Core.Models
<h3>Basic</h3>

<button class="btn btn-secondary" @onclick="@(() => Grid.SortByAsync("Id"))">Sort By Id</button>
<button class="btn btn-secondary" @onclick="@(() => Grid.Pager.GoToPage(5))">Go to page 5</button>


<DataGrid Data="People" class="table table-striped table-hover" @ref="Grid">
    <DataColumn TItem="Person" Property="p => p.Id" Width="60px">
        <Template>
            <a href="#" class="d-block" title="@context.FullName">@context.Id</a>
        </Template>
    </DataColumn>
    <DataColumn TItem="Person" Property="p => p.FirstName" SortIndex="1" />
    <DataColumn TItem="Person" Property="p => p.LastName" SortIndex="0" />
    <DataColumn TItem="Person" Property="p => p.Age" Width="90px" Style="@AgeStyle" />
    <DataColumn TItem="Person" Property="p => p.Location" Sortable="false" />
    <DataColumn TItem="Person" Property="p => p.Birthday" Format="d" />

    <DataPager TItem="Person" PageSize="10">
        <InformationTemplate>
            <span>@context.StartItem - @context.EndItem of @context.TotalItems items</span>
        </InformationTemplate>
    </DataPager>
</DataGrid>

@code {
    public ICollection<Person> People { get; set; }

    private DataGrid<Person> Grid { get; set; }

    protected override void OnInitialized()
    {
        People = Data.GeneratePeople(200).ToList();
    }


    protected string AgeStyle(Person person)
    {
        if (person.Age > 75)
            return "background-color: #dc3545";
        if (person.Age > 50)
            return "background-color: #ffc107";

        return null;
    }

}
